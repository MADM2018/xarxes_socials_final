/**
 * Read JSONL one line at a time
 *
 * @param {string} filepath filepath
 * @returns {AsyncIterableIterator<T>}
 * @example
 *
 * const rl = readlines<T>(filepath)
 *
 * while (true) {
 *     const {value, done} = await rl.next()
 *     if (done) break;
 *     console.log(value); // value => T
 * }
 */
export declare function readlines<T>(filepath: string): AsyncIterableIterator<T>;
/**
 * Read JSONL multiple lines at a time
 *
 * @param {string} filepath filepath
 * @param {number} maxlines maximum number of lines per iter.next()
 * @returns {AsyncIterableIterator<T[]>}
 * @example
 *
 * const rl = readlinesChunk<T>(filepath, 100)
 *
 * while (true) {
 *     const {value, done} = await rl.next()
 *     if (done) break;
 *     console.log(value); // value => Array<T>
 * }
 */
export declare function readlinesChunk<T>(filepath: string, maxlines: number): AsyncIterableIterator<T[]>;
